#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64

# Add a button to trigger the workflow
on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: Import external feeds
      working-directory: ./openwrt
      run: |
        git clone https://github.com/xiaorouji/openwrt-passwall.git package/lienol
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku
        git clone https://github.com/pexcn/openwrt-chinadns-ng.git package/chinadns-ng
        git clone https://github.com/aa65535/openwrt-dns-forwarder.git package/dns-forwarder
        git clone https://github.com/pexcn/openwrt-dns2tcp.git package/dns2tcp
        git clone -b master --single-branch https://github.com/LGA1150/openwrt-fullconenat package/fullconenat
        git clone https://github.com/pexcn/openwrt-ipt2socks.git package/ipt2socks
        git clone https://github.com/pexcn/openwrt-portfwd.git package/portfwd
        git clone https://github.com/pexcn/openwrt-transproxy.git package/transproxy
        git clone https://github.com/pexcn/openwrt-vlmcsd.git package/vlmcsd
        git clone https://github.com/pexcn-archived/openwrt-dns2socks.git package/dns2socks

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Archive files
      run: |
        7z a -t7z -mx=9 dayuwrt.7z ./openwrt/bin/targets/x86/64

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: DaYuWRT
        path: dayuwrt.7z

    # - name: Upload
    #   run: |
    #     curl https://rclone.org/install.sh | sudo bash
    #     echo "
    #     [onedrive]
    #     type = onedrive
    #     client_id = ${{secrets.client_id}}
    #     client_secret = ${{secrets.client_secret}}
    #     token = {"access_token": "", "expire"}
    #     " >> ~/.config/rclone/rclone.conf
    #     sudo timedatectl set-timezone "Asia/Shanghai"
    #     rclone mkdir onedrive:/dayuwrt
    #     rclone sync ./dayuwrt.7z onedrive:/dayuwrt